## troubleshooting 
# 1. pip can't be found, wrong syntax --> make sure to add python to environment variables with the installation
# 2. pip doesn't exist --> tick the pip box during the installation step "optional features" to install pip

## >>>>>>>>>>>> abagen toolbox expression data processing Jupyter Lab <<<<<<<<<<<<< ##


## ---------- setting up working environment and prerequisites

# install python via website https://www.python.org/downloads/ 
# open cmd

# install abagen via TERMINAL only (!)
pip install abagen

# NOTE: usually pip is included in the installation of python
# if you want to install it manually anyways... 

# download the "get-pip.py" file beforehand here: 
# https://www.liquidweb.com/kb/install-pip-windows/ (under Step 3, point 1)
# to any directory on your machine in order to execute the "python get-pip.py" command
# NOTE for dummies (like myself): this installation takes place in the regular cmd space, not in the python shell

# then execute
python get-pip.py

# download Jupyter Lab (not sure if this is 100% necessary, but it helped me a lot as compared to the browser version only?)
pip install jupyterlab

# to run JL, run this in the cmd/terminal (regular environment)
jupyter-lab


## ---------- analysis 

# to run in python shell, open python shell in cmd 
python

# ----------- from here, code is the same in python shell and in notebook

# activate abagen - necessary?
import abagen

# fetch atlas/parcellation
atlas = abagen.fetch_desikan_killiany()

# get expression data and do the parcellation 
# --> if data is already downloaded to local machine, specify the directory it is stored in with " data_dir='your/local/path/microarray/' " parameter
# --> otherwise, the function will download the data per default
expression_main, report = abagen.get_expression_data(atlas['image'], atlas['info'],
						missing = 'interpolate',       # fill missing values
						norm_matched=False,            # necessary for the missing parameter to work
						return_report=True)            # returns report about what was done

# check if everything worked
print(expression_main)

# export to csv
expression_main.to_csv ('C:/01Dokumente/07Erwerbstaetigkeit/01PhD_UiO/projects/first_author/oxytocinHealth/RQ4/data/output/expression_main.csv', 
			index = False, header=True)







